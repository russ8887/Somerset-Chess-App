# Generated by Django 5.2.5 on 2025-08-21 09:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0005_timeslot_remove_scheduledgroup_end_time_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., 4G, 5P', max_length=20, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='student',
            name='class_group',
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='enrollment_type',
            field=models.CharField(choices=[('SOLO', 'Solo'), ('PAIR', 'Pair'), ('GROUP', 'Group')], max_length=5),
        ),
        migrations.AlterField(
            model_name='scheduledunavailability',
            name='name',
            field=models.CharField(help_text='e.g., Year 4 Sports (Recurring)', max_length=200),
        ),
        migrations.AlterField(
            model_name='scheduledunavailability',
            name='students',
            field=models.ManyToManyField(blank=True, to='scheduler.student'),
        ),
        migrations.CreateModel(
            name='OneOffEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Year 4 Camp, Public Holiday', max_length=200)),
                ('event_date', models.DateField()),
                ('reason', models.CharField(help_text="Reason for absence, e.g., 'School Excursion'", max_length=255)),
                ('students', models.ManyToManyField(blank=True, to='scheduler.student')),
                ('time_slots', models.ManyToManyField(blank=True, help_text='Select one or more time slots. Leave blank for an all-day event.', to='scheduler.timeslot')),
                ('school_classes', models.ManyToManyField(blank=True, to='scheduler.schoolclass')),
            ],
        ),
        migrations.AddField(
            model_name='scheduledunavailability',
            name='school_classes',
            field=models.ManyToManyField(blank=True, to='scheduler.schoolclass'),
        ),
        migrations.AddField(
            model_name='student',
            name='school_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduler.schoolclass'),
        ),
    ]
